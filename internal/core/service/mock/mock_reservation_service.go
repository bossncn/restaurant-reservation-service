// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/service/reservations.go
//
// Generated by this command:
//
//	mockgen -source=internal/core/service/reservations.go -destination=internal/core/service/mock/mock_reservation_service.go
//

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockReservationService is a mock of ReservationService interface.
type MockReservationService struct {
	ctrl     *gomock.Controller
	recorder *MockReservationServiceMockRecorder
	isgomock struct{}
}

// MockReservationServiceMockRecorder is the mock recorder for MockReservationService.
type MockReservationServiceMockRecorder struct {
	mock *MockReservationService
}

// NewMockReservationService creates a new mock instance.
func NewMockReservationService(ctrl *gomock.Controller) *MockReservationService {
	mock := &MockReservationService{ctrl: ctrl}
	mock.recorder = &MockReservationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReservationService) EXPECT() *MockReservationServiceMockRecorder {
	return m.recorder
}

// CancelReservation mocks base method.
func (m *MockReservationService) CancelReservation(reservationID string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CancelReservation", reservationID)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CancelReservation indicates an expected call of CancelReservation.
func (mr *MockReservationServiceMockRecorder) CancelReservation(reservationID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CancelReservation", reflect.TypeOf((*MockReservationService)(nil).CancelReservation), reservationID)
}

// ReserveTables mocks base method.
func (m *MockReservationService) ReserveTables(numCustomers int) (string, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReserveTables", numCustomers)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ReserveTables indicates an expected call of ReserveTables.
func (mr *MockReservationServiceMockRecorder) ReserveTables(numCustomers any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReserveTables", reflect.TypeOf((*MockReservationService)(nil).ReserveTables), numCustomers)
}
